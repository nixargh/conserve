#!/usr/bin/ruby
#### INFO ######################################################################
# ahco (Automatic Handsfree Can Opener) - restore utility for Conserve backups.
# (*w) author: nixargh <nixargh@gmail.com>
$version = '0.0.1.0'
#### LICENSE ###################################################################
# ahco - restore utility for Conserve backups.
# Copyright (C) 2013  nixargh <nixargh@gmail.com>
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/gpl.html.
#### SETTINGS ##################################################################
if ARGV.index("-d") || ARGV.index("--debug")
  $debug = true
else
  $debug = false
end
#### REQUIRE ###################################################################
require 'fileutils'
#### CLASES ####################################################################
class AHCO
  def initialize
    puts "Initializing new AHCO..." if $debug
    @lib_dir = '/usr/lib/ahco'
    ENV['PATH'] = "#{ENV['PATH']}"
  end

  # start all staff
  #
  def start
    load_libraries
    @params = parse_options
    $debug = @params[:debug]
  end

  # load libraries
  #
  def load_libraries
    puts "Loading libraries..." if $debug
    File.directory?("./lib") ? $LOAD_PATH.unshift("./lib") : $LOAD_PATH.unshift(@lib_dir)
    require 'add_functions' 
    require 'options'
    require 'disk'
  end

  # collect information about system resources
  #
  def collect_sysinfo
  end

  # hard disk operations
  #
  def operate_disk
  end

  # LVM operations
  #
  def operate_lvm
  end

end
#### FUNCTIONS #################################################################
#### PROGRAM ###################################################################
begin
  puts 'START' if $debug
  ahco = AHCO.new
  ahco.start
  puts 'END' if $debug
rescue
  puts "\t#{$!}"
  puts $!.backtrace if $debug
  exit 1
end
